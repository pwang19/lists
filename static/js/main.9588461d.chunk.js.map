{"version":3,"sources":["components/store/actions/collectionActions.js","components/store/actions/itemActions.js","components/store/actions/listActions.js","components/io/import.js","components/core/id-gen.js","components/list/NewList.js","components/item/Item.js","components/item/NewItem.js","components/list/List.js","components/collection/Collection.js","components/home/home.js","components/io/export.js","components/io/save.js","components/io/load.js","components/home/navbar.js","App.js","components/store/reducers/listReducer.js","components/store/reducers/itemReducer.js","components/store/reducers/collectionReducer.js","components/store/reducers/rootReducer.js","index.js"],"names":["addListToCollection","list","dispatch","getState","type","err","addItem","item","createList","ImportCollection","onSubmit","e","preventDefault","imported","JSON","parse","document","getElementById","value","lists","map","props","items","className","this","class","id","placeholder","Component","connect","state","generateID","Math","random","toString","substring","NewList","name","handleSubmit","firstChild","onChange","setState","target","required","NewItem","complete","listID","formID","addItemToList","forList","List","thisList","listIndex","allIDs","indexOf","Collection","collection","length","home","console","log","stringify","window","localStorage","setItem","LoadCollection","getItem","Navbar","href","App","initState","listReducer","action","newList","push","itemReducer","newItem","collections","collectionReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9588461d.chunk.js","sourcesContent":["export const addListToCollection = (list) => {\n    return (dispatch, getState) => {\n        try {\n            dispatch({ type: 'ADD_LIST_TO_COLLECTION', list })\n        } catch (err) {\n            dispatch({ type: 'ITEM_ERROR', err })\n        }\n    }\n}","export const addItem = (item) => {\n    return (dispatch, getState) => {\n        try {\n            dispatch({ type: 'ADD_ITEM', item })\n        } catch (err) {\n            dispatch({ type: 'ITEM_ERROR', err })\n        }\n    }\n}","export const addItemToList = (item) => {\n    return (dispatch, getState) => {\n        try {\n            dispatch({ type: 'ADD_ITEM_TO_LIST', item })\n        } catch (err) {\n            dispatch({ type: 'LIST_ERROR', err })\n        }\n    }\n}\n\nexport const createList = (list) => {\n    return (dispatch, getState) => {\n        try {\n            dispatch({ type: 'CREATE_LIST', list })\n        } catch (err) {\n            dispatch({ type: 'LIST_ERROR', err })\n        }\n    }\n}","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addListToCollection } from \"../store/actions/collectionActions\";\nimport { addItem } from \"../store/actions/itemActions\";\nimport { createList } from \"../store/actions/listActions\";\n\nclass ImportCollection extends Component {\n    onSubmit = (e) => {\n        e.preventDefault()\n        const imported = JSON.parse(document.getElementById(\"import-area\").value)\n        imported.list.lists.map(list => {\n            this.props.createList(list)\n            this.props.addListToCollection(list)\n            return 0\n        })\n        imported.item.items.map(item => {\n            this.props.addItem(item)\n            return 0\n        })\n    }\n\n    render() {\n        return (\n            <div className='import'>\n                <form onSubmit={this.onSubmit}>\n                    <div class=\"input-field\">\n                        <textarea id=\"import-area\" class=\"materialize-textarea\" placeholder='import a collection...'></textarea>\n                    </div>\n                    <button className='btn'>Import</button>\n                </form>\n            </div>\n        )\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addItem: (item) => dispatch(addItem(item)),\n        createList: (list) => dispatch(createList(list)),\n        addListToCollection: (list) => dispatch(addListToCollection(list))\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return state\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImportCollection);","export const generateID = () => {\n    return (Math.random() + 1).toString(36).substring(2)\n}","import { Component } from \"react\";\nimport { connect } from 'react-redux'\nimport { createList } from '../store/actions/listActions'\nimport { addListToCollection } from '../store/actions/collectionActions'\nimport { generateID } from \"../core/id-gen\";\n\nclass NewList extends Component {\n\n    state = {\n        name: null,\n        items: null,\n        id: null\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.createList(this.state);\n        this.props.addListToCollection(this.state);\n        document.getElementById('new-list-form').firstChild.value = '';\n    }\n\n    onChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value,\n            id: generateID(),\n            items: []\n        })\n    }\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit} id='new-list-form'>\n                    <input type='text' placeholder='New List' onChange={this.onChange} id='name' required></input>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createList: (list) => dispatch(createList(list)),\n        addListToCollection: (list) => dispatch(addListToCollection(list))\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return state\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewList);","import { connect } from \"react-redux\";\n\nconst Item = (props) => {\n    return props.name\n}\n\nconst mapStateToProps = (state) => {\n    return state\n}\n\nexport default connect(mapStateToProps)(Item);","import { Component } from \"react\";\nimport { connect } from 'react-redux'\nimport { generateID } from \"../core/id-gen\";\nimport { addItem } from '../store/actions/itemActions'\nimport { addItemToList } from '../store/actions/listActions'\n\nclass NewItem extends Component {\n    state = {\n        name: null,\n        id: null,\n        complete: false,\n        listID: null,\n        formID: generateID()\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.addItem(this.state);\n        this.props.addItemToList(this.state);\n        document.getElementById(this.state.formID).firstChild.value = '';\n    }\n\n    onChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value,\n            id: generateID(),\n            listID: this.props.forList\n        })\n    }\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit} id={this.state.formID}>\n                    <input type='text' placeholder='New Item' onChange={this.onChange} id='name' required></input>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addItem: (item) => dispatch(addItem(item)),\n        addItemToList: (item) => dispatch(addItemToList(item))\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return state\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewItem);","import Item from \"../item/Item\";\nimport { connect } from 'react-redux';\nimport NewItem from \"../item/NewItem\";\nimport { Component } from \"react\";\n\nclass List extends Component {\n    render() {\n        const listID = this.props.thisList.id\n        const listIndex = this.props.list.allIDs.indexOf(listID)\n        const list = this.props.list.lists[listIndex]\n        return (\n            <div className='container'>\n                <h3>{list.name}</h3>\n                {list.items.map((item) => {\n                    return (\n                        <div>\n                            <label>\n                                <input type=\"checkbox\" />\n                                <span><Item name={item.name} key={item.id} complete={item.complete} /></span>\n                            </label>\n                        </div>\n                    )\n                })}\n                <NewItem forList={list.id} />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return state;\n}\n\n\nexport default connect(mapStateToProps)(List)","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport List from \"../list/List\";\n\nclass Collection extends Component {\n    state = {\n\n    }\n\n    render() {\n        if (!this.props.collection.lists.length) {\n            return null\n        }\n        return (\n            <div>\n                {this.props.collection.lists.length && this.props.collection.lists.map((list) => {\n                    return (\n                        <List thisList={list} />\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return state;\n}\n\nexport default connect(mapStateToProps)(Collection)","import ImportCollection from \"../io/import\";\nimport NewList from \"../list/NewList\";\nimport Collection from '../collection/Collection';\n\nfunction home() {\n    return (\n        <div className='home container'>\n            <NewList />\n            <Collection />\n            <ImportCollection />\n        </div>\n    )\n}\n\nexport default home;","import { connect } from \"react-redux\";\n\nlet state = {}\n\nconst ExportCollection = (props) => {\n    state = props\n    return (\n        <div className='export'>\n            <form onSubmit={onSubmit}>\n                <button className='btn'>Export</button>\n            </form>\n        </div>\n    )\n}\n\nconst onSubmit = (e) => {\n    e.preventDefault()\n    console.log(JSON.stringify(state))\n}\n\nconst mapStateToProps = (state) => {\n    return state\n}\n\nexport default connect(mapStateToProps)(ExportCollection);","import { connect } from \"react-redux\";\n\nlet state = {}\n\nconst SaveCollection = (props) => {\n    state = props\n    return (\n        <div className='save'>\n            <form onSubmit={onSubmit}>\n                <button className='btn'>Save</button>\n            </form>\n        </div>\n    )\n}\n\nconst onSubmit = (e) => {\n    e.preventDefault()\n    window.localStorage.setItem('list-collection', JSON.stringify(state))\n    console.log('saved to localStorage');\n}\n\nconst mapStateToProps = (state) => {\n    return state\n}\n\nexport default connect(mapStateToProps)(SaveCollection);","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addListToCollection } from \"../store/actions/collectionActions\";\nimport { addItem } from \"../store/actions/itemActions\";\nimport { createList } from \"../store/actions/listActions\";\n\nclass LoadCollection extends Component {\n    onSubmit = (e) => {\n        e.preventDefault()\n        const imported = JSON.parse(window.localStorage.getItem('list-collection'))\n        imported.list.lists.map(list => {\n            this.props.createList(list)\n            this.props.addListToCollection(list)\n            return 0\n        })\n        imported.item.items.map(item => {\n            this.props.addItem(item)\n            return 0\n        })\n    }\n\n    render() {\n        return (\n            <div className='load'>\n                <form onSubmit={this.onSubmit}>\n                    <button className='btn'>Load</button>\n                </form>\n            </div>\n        )\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addItem: (item) => dispatch(addItem(item)),\n        createList: (list) => dispatch(createList(list)),\n        addListToCollection: (list) => dispatch(addListToCollection(list))\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return state\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoadCollection);","import ExportCollection from \"../io/export\";\nimport SaveCollection from '../io/save';\nimport LoadCollection from '../io/load';\n\nconst Navbar = () => {\n    return (\n        <div>\n            <nav>\n                <div class=\"nav-wrapper navbar\">\n                    <a href=\"#!\" class=\"brand-logo\">Lists</a>\n                    <ul class=\"right\">\n                        <li><ExportCollection /></li>\n                        <li><SaveCollection /></li>\n                        <li><LoadCollection /></li>\n                    </ul>\n                </div>\n            </nav>\n        </div>\n    )\n}\n\nexport default Navbar","import Home from \"./components/home/home\";\nimport { Component } from \"react\";\nimport Navbar from \"./components/home/navbar\";\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Navbar />\n        <Home />\n      </div>\n    );\n  }\n}\n\nexport default App;","const initState = {\n    lists: [],\n    allIDs: []\n}\n\nconst listReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE_LIST':\n            const newList = {\n                name: action.list.name,\n                items: action.list.items,\n                id: action.list.id\n            }\n            return {\n                lists: [...state.lists, newList],\n                allIDs: [...state.allIDs, newList.id]\n            }\n        case 'ADD_ITEM_TO_LIST':\n            const listID = action.item.listID;\n            const listIndex = state.allIDs.indexOf(listID);\n            state.lists[listIndex].items.push({\n                name: action.item.name,\n                id: action.item.id,\n                complete: action.item.complete\n            })\n            return state\n        case 'LIST_ERROR':\n            console.log('list error:', action.err);\n            return state\n        default:\n            return state\n    }\n\n}\n\nexport default listReducer","const initState = {\n    items: [],\n    allIDs: []\n}\n\nconst itemReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'ADD_ITEM':\n            const newItem = {\n                name: action.item.name,\n                id: action.item.id,\n                complete: false\n            }\n            return {\n                items: [...state.items, newItem],\n                allIDs: [...state.allIDs, newItem.id]\n            }\n        case 'ITEM_ERROR':\n            console.log('item error:', action.err);\n            return state\n        default:\n            return state\n    }\n}\n\nexport default itemReducer","const initState = {\n    collections: [],\n    lists: [],\n    id: null\n}\n\nconst collectionReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'ADD_LIST_TO_COLLECTION':\n            return {\n                lists: [...state.lists, action.list]\n            }\n        case 'COLLECTION_ERROR':\n            console.log('collection error:', action.err);\n            return state\n        default:\n            return state\n    }\n\n}\n\nexport default collectionReducer","import { combineReducers } from 'redux'\nimport listReducer from './listReducer';\nimport itemReducer from './itemReducer';\nimport collectionReducer from './collectionReducer';\n\nconst rootReducer = combineReducers({\n    collection: collectionReducer,\n    list: listReducer,\n    item: itemReducer\n})\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport rootReducer from './components/store/reducers/rootReducer'\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}